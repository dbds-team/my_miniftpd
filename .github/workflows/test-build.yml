name: Test Build

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test-build:
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            name: linux-x64
            arch: x64
            build_flags: ""
          - os: ubuntu-latest
            name: linux-x86
            arch: x86
            build_flags: "BUILD_32BIT=1"
          
          # macOS builds
          - os: macos-latest
            name: macos-x64
            arch: x64
            build_flags: ""
          - os: macos-14
            name: macos-arm64
            arch: arm64
            build_flags: ""

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    # Setup 32-bit environment on Ubuntu
    - name: Setup 32-bit environment
      if: matrix.arch == 'x86' && runner.os == 'Linux'
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y gcc-multilib g++-multilib libc6-dev-i386 libcrypt-dev:i386

    # Build
    - name: Build
      run: |
        make clean
        make ${{ matrix.build_flags }}
        
    # Test if binary exists and is executable
    - name: Test binary
      run: |
        test -f miniftpd
        test -x miniftpd
        file miniftpd